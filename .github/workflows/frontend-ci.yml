name: Frontend CI Pipeline

on:
  pull_request:
    branches:
      - main
      - frontend
  push:
    branches:
      - frontend

jobs:
  check-changes-frontend:
    runs-on: ubuntu-latest
    outputs:
      output_1: ${{ steps.filter.outputs.frontend_dir }}
      output_2: ${{ steps.filter.outputs.output_2 }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          frontend_dir:
            - 'lnm-frontend/**'
    # run only if 'workflows' files were changed
    - name: workflow tests
      if: steps.filter.outputs.frontend_dir == 'true'
      run: |
        echo 'There were changes in lnm-frontend/**, proceeding...'
        echo 'output_2=true' >> "$GITHUB_OUTPUT"
    # run only if not 'workflows' files were changed
    - name: not workflow tests
      if: steps.filter.outputs.frontend_dir != 'true'
      run: |
        echo 'There were no changes in lnm-frontend/**, skipping subsequent frontend jobs...'
        echo 'output_2=false' >> "$GITHUB_OUTPUT"
            
  lint-frontend:
    runs-on: ubuntu-latest
    needs: check-changes-frontend
    if: ${{ needs.check-changes-frontend.outputs.output_2 == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./lnm-frontend
        run: npm install

      - name: Lint JS/TS
        working-directory: ./lnm-frontend
        run: npm run lint:js

      - name: Lint styles
        working-directory: ./lnm-frontend
        run: npm run lint:styles
        
  test-frontend:
    runs-on: ubuntu-latest
    needs: lint-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./lnm-frontend
        run: npm install

      - name: Install playwright dependencies
        working-directory: ./lnm-frontend
        run: npx playwright install

      - name: Start server
        working-directory: ./lnm-frontend
        run: |
          npm run dev &
          sleep 5

      - name: Run unit tests
        working-directory: ./lnm-frontend
        run: npm test

      - name: Run e2e tests
        working-directory: ./lnm-frontend/e2e
        run: npx playwright test

      - name: Run tests with coverage
        working-directory: ./lnm-frontend
        run: npm run test -- --coverage

      - name: Stop server
        if: always()
        run: |
          PID=$(lsof -t -i:5173)
          if [ -n "$PID" ]; then
            kill $PID
          fi

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage
